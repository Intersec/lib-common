%ignore-case
%define initializer-suffix ,0
%compare-lengths
%readonly-tables
%global-table
%struct-type
%{
/***************************************************************************/
/*                                                                         */
/* Copyright 2020 INTERSEC SA                                              */
/*                                                                         */
/* Licensed under the Apache License, Version 2.0 (the "License");         */
/* you may not use this file except in compliance with the License.        */
/* You may obtain a copy of the License at                                 */
/*                                                                         */
/*     http://www.apache.org/licenses/LICENSE-2.0                          */
/*                                                                         */
/* Unless required by applicable law or agreed to in writing, software     */
/* distributed under the License is distributed on an "AS IS" BASIS,       */
/* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.*/
/* See the License for the specific language governing permissions and     */
/* limitations under the License.                                          */
/*                                                                         */
/***************************************************************************/
#include <lib-common/http.h>
#define in_word_set  \
    __attribute__((unused)) go_away_gperf(void);                          \
    const struct whdr *go_away_gperf(void) { return NULL; }               \
    static ALWAYS_INLINE const struct whdr *find_word
%}
struct whdr { const char *name; http_wkhdr_t hdr; };
%%
Cache-Control,       HTTP_WKHDR_CACHE_CONTROL
Connection,          HTTP_WKHDR_CONNECTION
Date,                HTTP_WKHDR_DATE
Pragma,              HTTP_WKHDR_PRAGMA
Trailer,             HTTP_WKHDR_TRAILER
Transfer-Encoding,   HTTP_WKHDR_TRANSFER_ENCODING
Upgrade,             HTTP_WKHDR_UPGRADE
Via,                 HTTP_WKHDR_VIA
Warning,             HTTP_WKHDR_WARNING
Accept,              HTTP_WKHDR_ACCEPT
Accept-Charset,      HTTP_WKHDR_ACCEPT_CHARSET
Accept-Encoding,     HTTP_WKHDR_ACCEPT_ENCODING
Accept-Language,     HTTP_WKHDR_ACCEPT_LANGUAGE
Authorization,       HTTP_WKHDR_AUTHORIZATION
Expect,              HTTP_WKHDR_EXPECT
From,                HTTP_WKHDR_FROM
Host,                HTTP_WKHDR_HOST
If-Match,            HTTP_WKHDR_IF_MATCH
If-Modified-Since,   HTTP_WKHDR_IF_MODIFIED_SINCE
If-None-Match,       HTTP_WKHDR_IF_NONE_MATCH
If-Range,            HTTP_WKHDR_IF_RANGE
If-Unmodified-Since, HTTP_WKHDR_IF_UNMODIFIED_SINCE
Max-Formwards,       HTTP_WKHDR_MAX_FORMWARDS
Proxy-Authorization, HTTP_WKHDR_PROXY_AUTHORIZATION
Range,               HTTP_WKHDR_RANGE
Referer,             HTTP_WKHDR_REFERER
TE,                  HTTP_WKHDR_TE
User-Agent,          HTTP_WKHDR_USER_AGENT
Accept-Ranges,       HTTP_WKHDR_ACCEPT_RANGES
Age,                 HTTP_WKHDR_AGE
ETag,                HTTP_WKHDR_ETAG
Location,            HTTP_WKHDR_LOCATION
Proxy-Authenticate,  HTTP_WKHDR_PROXY_AUTHENTICATE
Retry-After,         HTTP_WKHDR_RETRY_AFTER
Server,              HTTP_WKHDR_SERVER
Vary,                HTTP_WKHDR_VARY
WWW-Authenticate,    HTTP_WKHDR_WWW_AUTHENTICATE
Allow,               HTTP_WKHDR_ALLOW
Content-Encoding,    HTTP_WKHDR_CONTENT_ENCODING
Content-Language,    HTTP_WKHDR_CONTENT_LANGUAGE
Content-Length,      HTTP_WKHDR_CONTENT_LENGTH
Content-Location,    HTTP_WKHDR_CONTENT_LOCATION
Content-MD5,         HTTP_WKHDR_CONTENT_MD5
Content-Range,       HTTP_WKHDR_CONTENT_RANGE
Content-Type,        HTTP_WKHDR_CONTENT_TYPE
Expires,             HTTP_WKHDR_EXPIRES
Last-Modified,       HTTP_WKHDR_LAST_MODIFIED
SOAPAction,          HTTP_WKHDR_SOAPACTION
%%

char const * const http_whdr_str[HTTP_WKHDR__MAX] = {
#define H(hdr, v)  [HTTP_WKHDR_##hdr] = v
    H(CACHE_CONTROL,       "Cache-Control"),
    H(CONNECTION,          "Connection"),
    H(DATE,                "Date"),
    H(PRAGMA,              "Pragma"),
    H(TRAILER,             "Trailer"),
    H(TRANSFER_ENCODING,   "Transfer-Encoding"),
    H(UPGRADE,             "Upgrade"),
    H(VIA,                 "Via"),
    H(WARNING,             "Warning"),

    H(ACCEPT,              "Accept"),
    H(ACCEPT_CHARSET,      "Accept-Charset"),
    H(ACCEPT_ENCODING,     "Accept-Encoding"),
    H(ACCEPT_LANGUAGE,     "Accept-Language"),
    H(AUTHORIZATION,       "Authorization"),
    H(EXPECT,              "Expect"),
    H(FROM,                "From"),
    H(HOST,                "Host"),
    H(IF_MATCH,            "If-Match"),
    H(IF_MODIFIED_SINCE,   "If-Modified-Since"),
    H(IF_NONE_MATCH,       "If-None-Match"),
    H(IF_RANGE,            "If-Range"),
    H(IF_UNMODIFIED_SINCE, "If-Unmodified-Since"),
    H(MAX_FORMWARDS,       "Max-Formwards"),
    H(PROXY_AUTHORIZATION, "Proxy-Authorization"),
    H(RANGE,               "Range"),
    H(REFERER,             "Referer"),
    H(TE,                  "TE"),
    H(USER_AGENT,          "User-Agent"),

    H(ACCEPT_RANGES,       "Accept-Ranges"),
    H(AGE,                 "Age"),
    H(ETAG,                "ETag"),
    H(LOCATION,            "Location"),
    H(PROXY_AUTHENTICATE,  "Proxy-Authenticate"),
    H(RETRY_AFTER,         "Retry-After"),
    H(SERVER,              "Server"),
    H(VARY,                "Vary"),
    H(WWW_AUTHENTICATE,    "WWW-Authenticate"),

    H(ALLOW,               "Allow"),
    H(CONTENT_ENCODING,    "Content-Encoding"),
    H(CONTENT_LANGUAGE,    "Content-Language"),
    H(CONTENT_LENGTH,      "Content-Length"),
    H(CONTENT_LOCATION,    "Content-Location"),
    H(CONTENT_MD5,         "Content-MD5"),
    H(CONTENT_RANGE,       "Content-Range"),
    H(CONTENT_TYPE,        "Content-Type"),
    H(EXPIRES,             "Expires"),
    H(LAST_MODIFIED,       "Last-Modified"),

    H(SOAPACTION,          "SOAPAction"),
#undef H
};

http_wkhdr_t http_wkhdr_from_ps(pstream_t ps)
{
    const struct whdr *res = find_word(ps.s, ps_len(&ps));

    return res ? res->hdr : HTTP_WKHDR_OTHER_HEADER;
}
