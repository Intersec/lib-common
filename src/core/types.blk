/***************************************************************************/
/*                                                                         */
/* Copyright 2020 INTERSEC SA                                              */
/*                                                                         */
/* Licensed under the Apache License, Version 2.0 (the "License");         */
/* you may not use this file except in compliance with the License.        */
/* You may obtain a copy of the License at                                 */
/*                                                                         */
/*     http://www.apache.org/licenses/LICENSE-2.0                          */
/*                                                                         */
/* Unless required by applicable law or agreed to in writing, software     */
/* distributed under the License is distributed on an "AS IS" BASIS,       */
/* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.*/
/* See the License for the specific language governing permissions and     */
/* limitations under the License.                                          */
/*                                                                         */
/***************************************************************************/

#include <lib-common/core.h>

/* {{{ Built-in comparison blocks */

const core_cmp_b(i8) core_i8_cmp = ^int (const int8_t *a, const int8_t *b) {
    return CMP(*a, *b);
};
const core_cmp_b(u8) core_u8_cmp = ^int (const uint8_t *a, const uint8_t *b) {
    return CMP(*a, *b);
};
const core_cmp_b(i16) core_i16_cmp = ^int (const int16_t *a, const int16_t *b) {
    return CMP(*a, *b);
};
const core_cmp_b(u16) core_u16_cmp = ^int (const uint16_t *a, const uint16_t *b) {
    return CMP(*a, *b);
};
const core_cmp_b(i32) core_i32_cmp = ^int (const int32_t *a, const int32_t *b) {
    return CMP(*a, *b);
};
const core_cmp_b(u32) core_u32_cmp = ^int (const uint32_t *a, const uint32_t *b) {
    return CMP(*a, *b);
};
const core_cmp_b(i64) core_i64_cmp = ^int (const int64_t *a, const int64_t *b) {
    return CMP(*a, *b);
};
const core_cmp_b(u64) core_u64_cmp = ^int (const uint64_t *a, const uint64_t *b) {
    return CMP(*a, *b);
};
const core_cmp_b(double) core_double_cmp = ^int (const double *a, const double *b)
{
    return CMP(*a, *b);
};
const core_cmp_b(lstr) core_lstr_cmp = ^int (const lstr_t *a, const lstr_t *b) {
    return lstr_cmp(*a, *b);
};
const core_cmp_b(str) core_str_cmp = ^int (char * const *a, char * const *b) {
    return strcmp(*a, *b);
};
const core_cmp_b(cstr) core_cstr_cmp = ^int (char const * const *a,
                                             char const * const *b) {
    return strcmp(*a, *b);
};

/* }}} */
