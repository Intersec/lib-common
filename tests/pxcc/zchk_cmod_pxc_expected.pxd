#**** THIS FILE IS AUTOGENERATED DO NOT MODIFY DIRECTLY ! ****

from libcpp cimport bool as _Bool

cdef extern from "zchk_cmod.h" nogil:

    cdef struct nested_t:
        int a

    cdef enum enum_t:
        ENUM_A = 0,
        ENUM_B = 5,
        ENUM_C = 32,

    cdef union union_t:
        int a
        int b

    cdef union struct_t__anon_un_t:
        int ua
        double ub

    cdef enum struct_t__anon_en_t:
        STRUCT_ENUM1 = 0,
        STRUCT_ENUM2 = 1,

    cdef struct struct_t__st3_t:
        long st2

    cdef struct struct_t__anon_st__st3_t:
        long st2

    cdef struct struct_t__anon_st_t:
        unsigned long long st1
        struct_t__st3_t st3

    cdef struct foo_t:
        pass

    ctypedef void (*cb_ptr_f)(foo_t *)

    ctypedef void cb_non_ptr_f(foo_t *)

    cdef struct bar_t:
        pass

    cdef struct struct_t:
        int a
        double b
        double c
        const nested_t * const ptr_st
        enum_t en
        union_t un
        struct_t__anon_un_t anon_un
        const _Bool uc
        const long ud
        struct_t__anon_en_t anon_en
        struct_t__anon_st_t anon_st
        cb_ptr_f cb1
        cb_non_ptr_f *cb2
        bar_t (*cb3)()
        void (*cb4)(char **(*)(void *)[42])
        float arr1[5]
        double arr2[0]

    cdef struct empty_struct_t:
        pass

    cdef union empty_union_t:
        pass

    cdef enum empty_enum_t:
        pass

    cdef struct non_typedef_struct_t:
        int a

    ctypedef struct only_typedef_struct_t:
        int a

    cdef struct different_name_struct_t:
        int a

    ctypedef different_name_struct_t different_name_typedef_struct_t

    cdef union non_typedef_union_t:
        int a

    ctypedef union only_typedef_union_t:
        int plop

    cdef union different_name_union_t:
        int a

    ctypedef different_name_union_t different_name_typedef_union_t

    ctypedef void *void_ptr_t

    ctypedef int array_ptr_t[5]

    cdef struct result_t:
        pass

    cdef union arg1_t:
        pass

    cdef enum arg2_t:
        pass

    result_t func(arg1_t , arg2_t )

    cdef struct var_type_t:
        pass

    var_type_t *global_var_g

    double **crazy_fn(int *, char *)[10]

    ctypedef char **(*crazy_fn_ptr)(void *)[42]

    float (*returns_func_ptr(int ))(float , float )

    double *(*(*(*returns_func_ptr_nested(char *))(int , double ))(int , long ))(char *)

    cdef struct crazy_field_t:
        char *(*(*crazy_ptr)(int ))(float *)

    cdef struct qhash_hdr_t:
        unsigned int len
        unsigned int size

    ctypedef struct qhash_t:
        qhash_hdr_t hdr
        qhash_hdr_t *old
        unsigned char *keys
        unsigned char *values
        unsigned int *hashes
        unsigned int ghosts
        unsigned char h_size
        unsigned char k_size
        unsigned short v_size
        unsigned int minsize

    cdef union qh_u32_t:
        qhash_t qh
        qhash_hdr_t hdr
        qhash_hdr_t *old
        unsigned int *keys
        void *values
        unsigned int *hashes
        unsigned int ghosts
        unsigned char h_size
        unsigned char k_size
        unsigned short v_size
        unsigned int minsize

    cdef struct recursive_ref_struct_t

    ctypedef void (*recursive_ref_cb_f)(recursive_ref_struct_t *)

    cdef struct recursive_ref_struct_t:
        recursive_ref_cb_f cb

    cdef struct cython_keywords_t:
        int False
        int None
        int True
        int c_and "and"
        int as
        int async
        int await
        int c_cimport "cimport"
        int c_class "class"
        int c_def "def"
        int c_del "del"
        int c_elif "elif"
        int c_except "except"
        int c_finally "finally"
        int c_from "from"
        int c_global "global"
        int c_include "include"
        int c_import "import"
        int c_in "in"
        int c_is "is"
        int c_lambda "lambda"
        int c_nonlocal "nonlocal"
        int c_not "not"
        int c_or "or"
        int c_pass "pass"
        int c_raise "raise"
        int c_try "try"
        int c_with "with"
        int c_yield "yield"

    cdef struct c_include "include":
        pass

    cdef union c_import "import":
        pass

    ctypedef c_import c_with "with"

    cdef enum c_except "except":
        c_finally "finally" = 0,

    ctypedef union c_raise "raise":
        c_except c_pass "pass"

    void c_yield "yield"()

    int square(int )

