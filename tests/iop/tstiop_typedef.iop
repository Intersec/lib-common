/***************************************************************************/
/*                                                                         */
/* Copyright 2023 INTERSEC SA                                              */
/*                                                                         */
/* Licensed under the Apache License, Version 2.0 (the "License");         */
/* you may not use this file except in compliance with the License.        */
/* You may obtain a copy of the License at                                 */
/*                                                                         */
/*     http://www.apache.org/licenses/LICENSE-2.0                          */
/*                                                                         */
/* Unless required by applicable law or agreed to in writing, software     */
/* distributed under the License is distributed on an "AS IS" BASIS,       */
/* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.*/
/* See the License for the specific language governing permissions and     */
/* limitations under the License.                                          */
/*                                                                         */
/***************************************************************************/

/* This package contains the IOP definitions used to test
 * iop_struct_check_backward_compat. */
package tstiop_typedef;

/* {{{ Basic union/struct/class/enum */

typedef tstiop_backward_compat.BasicUnion BasicUnion;
typedef tstiop_backward_compat.BasicStruct BasicStruct;
typedef tstiop_backward_compat.BasicClass BasicClass;
typedef tstiop_backward_compat.BasicClassChild BasicClassChild;
typedef tstiop_backward_compat.StructContainer1 StructContainer1;

typedef tstiop_backward_compat.Enum1 Enum1;

typedef string FullAddr;
typedef FullAddr FullTcpAddr;

typedef int Port;
typedef Port TcpPort;

/* }}} */
/* {{{ Structure containing enum or structure arrays */

typedef Enum1[] Enum1List;

enum LocalEnum2 {
    VAL1 = 1,
    VAL2 = 2,
};
typedef LocalEnum2[] Enum2List;

typedef BasicStruct[] BasicStructList;

struct LocalNumberStruct {
    uint   u32;
};
typedef LocalNumberStruct[] NumberStructList;

struct ArrayTest {
    BasicStructList list1;
    Enum1List list2;
    Enum2List list3;
    NumberStructList list4;
};

/* }}} */
