/***************************************************************************/
/*                                                                         */
/* Copyright 2020 INTERSEC SA                                              */
/*                                                                         */
/* Licensed under the Apache License, Version 2.0 (the "License");         */
/* you may not use this file except in compliance with the License.        */
/* You may obtain a copy of the License at                                 */
/*                                                                         */
/*     http://www.apache.org/licenses/LICENSE-2.0                          */
/*                                                                         */
/* Unless required by applicable law or agreed to in writing, software     */
/* distributed under the License is distributed on an "AS IS" BASIS,       */
/* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.*/
/* See the License for the specific language governing permissions and     */
/* limitations under the License.                                          */
/*                                                                         */
/***************************************************************************/

/* This file is used to test the IOPs inheritance and act as a
 * non-regression test. This file should always compile correctly */
package tstiop_inheritance;

/*  +- A1 ---+           A2         A3 (abstract)
 *  |        |           |          |
 *  B1   +- B2 -+     +- B3 -+      B4
 *       |      |     |      |      |
 *       C1     C2   C3      C4     C5 (private)
 *       |
 *       D1
 */

class A1 {
    static string staticStr = "a1";
    static tstiop.MyEnumA staticEnum = MY_ENUM_A_B;
    @nonZero
    int a = 1;
    int a2;
    string? a3;
};

class B1 : 1 : A1 {
    static int staticInt = 12;
    @maxLength(3)
    string b = "b";
};
class B2 : 65535 : A1 {
    static bool staticBool = true;
    bool b = true;
};

class C1 : 3 : B2 {
    static bool staticBool = false;
    @nonZero
    uint c = 3;
};
class C2 : 4 : B2 {
    static string staticStr  = "c2";

    /* Fields to test sorting */
    static string staticStr6 = "staticStr6";
    static string staticStr2 = "staticStr2";
    static string staticStr1 = "staticStr1";
    static string staticStr5 = "staticStr5";
    static string staticStr3 = "staticStr3";
    static string staticStr4 = "staticStr4";

    long c = 4;
};

class D1 : 5 : C1 {
};

/* --------------------------------- */

class A2 {
    string a = "A2";
};

class B3 : 1 : A2 {
    static double staticDouble = 23.0;
    long b = 5;
};

class C3 : 2 : B3 {
    static string staticStr = "c3";
    static double staticDouble = 33.0;
    int c = 6;
};
class C4 : 3 : B3 {
    static ulong staticInt = 44;
    bool c;
};

/* --------------------------------- */

abstract class A3 {
    static int staticInt;
    int a3 = 1;
};

class B4 : 1 : A3 {
    static int staticInt = 4;
    int b4 = 1;
};

@private
class C5 : 2 : B4 {
};

/* --------------------------------- */

struct ClassContainer {
    A1   a1;
    B2?  b2;
    C2[] c2;
};

struct ClassContainer2 {
    A1 a1;
    B3 b3;
    A3 a3;
};
