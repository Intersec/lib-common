/***** THIS FILE IS AUTOGENERATED DO NOT MODIFY DIRECTLY ! *****/
/* tslint:disable */
/* eslint-disable */
import { ClassModel, StructModel, UnionModel } from 'iop/backbone/model';
import { IopCollection } from 'iop/backbone/collection';
import * as iop from 'iop/backbone';
import { Enumeration } from 'iop/enumeration';
const enumeration = iop.enumeration;
const registerModel = iop.backbone.registerModel;
const registerCollection = iop.backbone.registerCollection;
import { Package as _IopCorePackage } from 'iop/core';
import JSON from 'json/tstgen.iop.json';
iop.load(JSON as _IopCorePackage);

import * as pkg_a from 'iop/pkg_a.iop';

export type MyEnumA_Int = 0
    | 1
    | 2;
export type MyEnumA_Str = 'VAL_A'
    | 'VAL_B'
    | 'VAL_C';
export type MyEnumA = MyEnumA_Str;
export interface MyEnumA_ModelIf extends Enumeration<MyEnumA_Str, MyEnumA_Int> {
    VAL_A: 'VAL_A';
    VAL_B: 'VAL_B';
    VAL_C: 'VAL_C';
}
export const MyEnumA_Model: MyEnumA_ModelIf = enumeration<MyEnumA_Str, MyEnumA_Int>('tstgen.MyEnumA') as any;
const MyStructA_fullname = 'tstgen.MyStructA';
export interface MyStructA {
    i: number;
    j: number;
    d1: number;
    weakRef1?: pkg_a.A;
    weakRef2?: pkg_a.A;
}
export interface MyStructA_ModelParam {
    i: number;
    j: number;
    d1?: number;
    weakRef1?: pkg_a.A_ModelParam | pkg_a.A_Model;
    weakRef2?: pkg_a.A_ModelParam | pkg_a.A_Model;
}
export class MyStructA_Model extends StructModel<MyStructA_ModelParam> {
    public i: number;
    public j: number;
    public d1: number;
    public weakRef1?: pkg_a.A_Model;
    public weakRef2?: pkg_a.A_Model;
};
registerModel(MyStructA_Model, MyStructA_fullname);
export class MyStructA_Collection extends IopCollection<MyStructA_Model> { };
registerCollection<MyStructA_Model>(MyStructA_Collection, MyStructA_fullname);


export type MyUnionA = { f4: number | string }
    | { f1: boolean };
export type MyUnionA_Pairs = { kind: 'f4', value: number | string }
    | { kind: 'f1', value: boolean };
export type MyUnionA_Keys = 'f4' | 'f1';
const MyUnionA_fullname = 'tstgen.MyUnionA';
export type MyUnionA_ModelPairs = { kind: 'f4', value: number | string }
    | { kind: 'f1', value: boolean };
export type MyUnionA_ModelParam = { f4: number | string }
    | { f1: boolean };
export class MyUnionA_Model extends UnionModel<MyUnionA_Keys, MyUnionA_ModelPairs, MyUnionA_ModelParam> {
    public f4: number | string | undefined;
    public f1: boolean | undefined;
};
registerModel(MyUnionA_Model, MyUnionA_fullname);
export class MyUnionA_Collection extends IopCollection<MyUnionA_Model> { };
registerCollection(MyUnionA_Collection, MyUnionA_fullname);

const Optimized_fullname = 'tstgen.Optimized';
export interface Optimized {
    f3: boolean;
    f4: number | string;
    f1: boolean;
    f2: number | string;
}
export interface Optimized_ModelParam {
    f3: boolean;
    f4: number | string;
    f1: boolean;
    f2: number | string;
}
export class Optimized_Model extends StructModel<Optimized_ModelParam> {
    public f3: boolean;
    public f4: number | string;
    public f1: boolean;
    public f2: number | string;
};
registerModel(Optimized_Model, Optimized_fullname);
export class Optimized_Collection extends IopCollection<Optimized_Model> { };
registerCollection<Optimized_Model>(Optimized_Collection, Optimized_fullname);

const MyClassA_fullname = 'tstgen.MyClassA';
export interface MyClassA {
    _class: string;
}
export interface MyClassA_ModelParam {
}
export class MyClassA_Model<Param extends MyClassA_ModelParam = MyClassA_ModelParam> extends ClassModel<Param> {
};
registerModel(MyClassA_Model, MyClassA_fullname);
export class MyClassA_Collection<Model extends MyClassA_Model = MyClassA_Model> extends IopCollection<Model> { };
registerCollection<MyClassA_Model>(MyClassA_Collection, MyClassA_fullname);


export namespace interfaces {
    export namespace MyIfaceA {
        export type funBArgs = void;
        export type funBRes = void;
        export type funBExn = void;
        export type funB = () => void;

        const funAArgs_fullname = 'tstgen.MyIfaceA.funAArgs';
        export interface funAArgs {
            a: number;
        }
        export interface funAArgs_ModelParam {
            a: number;
        }
        export class funAArgs_Model extends StructModel<funAArgs_ModelParam> {
            public a: number;
        };
        registerModel(funAArgs_Model, funAArgs_fullname);
        export class funAArgs_Collection extends IopCollection<funAArgs_Model> { };
        registerCollection<funAArgs_Model>(funAArgs_Collection, funAArgs_fullname);
        export type funARes = void;
        export type funAExn = void;
        export type funA = (a: number) => Promise<void>;

    }
}
