/***** THIS FILE IS AUTOGENERATED DO NOT MODIFY DIRECTLY ! *****/
/* tslint:disable */
/* eslint-disable */
import * as enum1 from "iop/enum1.iop";
import * as typedef1 from "iop/typedef1.iop";
import * as typedef2 from "iop/typedef2.iop";
const MyStruct_fullname = 'typedef_valid.MyStruct';
export interface MyStruct {
    a: string;
    b: number;
    type1: string;
    type2: string;
    s1: typedef1.FooS;
    s2: typedef2.FooS;
    u1: typedef1.FooU;
    u2: typedef2.FooU;
    e1: typedef1.FooE;
    e2: typedef2.FooE;
}


export type MyUnion = { a: string }
    | { b: number }
    | { c: boolean };
export type MyUnion_Pairs = { kind: 'a', value: string }
    | { kind: 'b', value: number }
    | { kind: 'c', value: boolean };
export type MyUnion_Keys = 'a' | 'b' | 'c';

const A_fullname = 'typedef_valid.A';
export interface A {
    _class: string;
    a: string;
}

const B_fullname = 'typedef_valid.B';
export interface B extends A {
}

const TypedefStructUseAll_fullname = 'typedef_valid.TypedefStructUseAll';
export interface TypedefStructUseAll {
    ms: string;
    opt?: string;
    def: string;
    mst: string;
    mul: number | string;
    muldef: number | string;
    md: number;
    mddef: number;
    mddef2: number;
    mns: string;
    m3: number | string;
    m37: number | string;
    b310: number | string;
    msa: Array<string>;
    msa3: Array<string>;
    msa6: Array<string>;
    msa610: Array<string>;
    mnso?: string;
    mea: enum1.MyEnum;
    msal: MyStruct;
    mya: MyUnion;
    muab: MyUnion;
    muabc: MyUnion;
    muwc: MyUnion;
    muwcopt?: MyUnion;
    a: A;
    b: B;
}


export type TypedefUnionUseAll = { ms: string }
    | { mul: number | string }
    | { mns: string }
    | { m3: number | string }
    | { b310: number | string }
    | { mea: enum1.MyEnum }
    | { msal: MyStruct }
    | { mya: MyUnion }
    | { muab: MyUnion }
    | { muabc: MyUnion }
    | { muwc: MyUnion }
    | { a: A }
    | { b: B };
export type TypedefUnionUseAll_Pairs = { kind: 'ms', value: string }
    | { kind: 'mul', value: number | string }
    | { kind: 'mns', value: string }
    | { kind: 'm3', value: number | string }
    | { kind: 'b310', value: number | string }
    | { kind: 'mea', value: enum1.MyEnum }
    | { kind: 'msal', value: MyStruct }
    | { kind: 'mya', value: MyUnion }
    | { kind: 'muab', value: MyUnion }
    | { kind: 'muabc', value: MyUnion }
    | { kind: 'muwc', value: MyUnion }
    | { kind: 'a', value: A }
    | { kind: 'b', value: B };
export type TypedefUnionUseAll_Keys = 'ms' | 'mul' | 'mns' | 'm3' | 'b310' | 'mea' | 'msal' | 'mya' | 'muab' | 'muabc' | 'muwc' | 'a' | 'b';

const C_fullname = 'typedef_valid.C';
export interface C extends B {
    b: string;
}

const RoutingHdr_fullname = 'typedef_valid.RoutingHdr';
export interface RoutingHdr {
    route: Route;
    originalHdr?: Hdr;
}

const Route_fullname = 'typedef_valid.Route';
export interface Route {
    _class: string;
}


export type Hdr = { simple: typedef1.FooS }
    | { routing: RoutingHdr };
export type Hdr_Pairs = { kind: 'simple', value: typedef1.FooS }
    | { kind: 'routing', value: RoutingHdr };
export type Hdr_Keys = 'simple' | 'routing';

const TypedefStructUseAllWithList_fullname = 'typedef_valid.TypedefStructUseAllWithList';
export interface TypedefStructUseAllWithList {
    listName: string;
    list: Array<TypedefStructUseAll>;
}


export namespace interfaces {
}
