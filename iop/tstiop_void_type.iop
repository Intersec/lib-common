package tstiop_void_type;

union VoidAlone {
    void field;
    int other;
};

/* try conversion : anything to void */
struct IntToVoid {
    int field;
};
struct ArrayToVoid {
    int[] field;
};
struct SmallArrayToVoid {
    byte[] field;
};
struct StructToVoid {
    IntToVoid field;
};
struct DoubleToVoid {
    double field;
};
struct VoidRequired {
    void field;
};
struct VoidOptional {
    void? field;
};

interface VoidAloneIf {
    f
        in (VoidAlone v)
        out void;
};

interface VoidRequiredIf {
    f
        in (VoidRequired v)
        out void;
};

interface VoidOptionalIf {
    f
        in (VoidOptional v)
        out void;
};

module VoidAloneMod {
    VoidAloneIf vi;
};

module VoidRequiredMod {
    VoidRequiredIf vi;
};

module VoidOptionalMod {
    VoidOptionalIf vi;
};
